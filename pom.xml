<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <!--<parent>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-parent</artifactId>-->
        <!--<version>2.0.7.RELEASE</version>-->
    <!--</parent>-->
    <modules>
        <module>spring5-demo</module>
        <module>helloword</module>
        <module>configurationpropertiesdemo</module>
        <module>spring-boot-config-demo</module>
        <module>spring-boot-dubbo-server</module>
        <module>spring-boot-dubbo-client</module>
        <module>spring-boot-webflux</module>
        <module>spring-boot-failure-analyzer</module>
        <module>spring-boot-events-listeners</module>
    </modules>



    <groupId>com.lzl</groupId>
    <artifactId>spring5</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.51</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.8.1</version>
            </dependency>
            <!-- spring cloud -->

            <!-- 如果不是通过继承 springbootstarterparentpom 来进行依赖管理，可以通过以下的方式-->
            <!-- Override Spring Data release train provided by Spring Boot -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-releasetrain</artifactId>
                <version>Fowler-SR2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.0.7.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 只有开发的时候用，会自动禁用缓存，请看 DevToolsPropertyDefaultsPostProcessor 这个类 -->
            <!-- 在类路径下的文件变更的时候，能够自动重启，静态资源和 可视化模版 改变不需要重启 -->
            <!-- SpringApplication.setRegisterShutdownHook(false) 被设置了的话，自动重启就不顶用了 -->
            <!-- spring-boot, spring-boot-devtools, spring-boot-autoconfigure, spring-boot-actuator, and spring-boot-starter. 等项目会被忽略而不能自动重启-->
            <!-- ResourceLoader 将会被定制化，这个类是被applicationContext使用的，如果已经存在一个applicationContext,那么它将会被包装，因为直接覆盖getResources方法是不支持的 -->
            <!-- 重启的技术原理 是 springboot提供了两个classloader,一个加载第三方jar等不不变的类。一个是加载应用类。
                重启的时候丢弃应用类加载器并且创建一个新的。
             -->
            <!-- 利用 属性 spring.devtools.restart.exclude=static/**,public/** ，那么更改 static 或者 public 将会引发重启 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <optional>true</optional>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>